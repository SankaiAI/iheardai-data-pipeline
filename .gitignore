# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
*.env
.env.*
!.env.example

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Data Pipeline Specific
# ======================

# Data files
data/raw/*
data/processed/*
!data/raw/.gitkeep
!data/processed/.gitkeep

# Log files
logs/*
*.log
!logs/.gitkeep

# Temporary files
tmp/
temp/
.tmp/

# Configuration files with secrets
config/.env
config/secrets.env
config/local_config.yaml
config/*_local.yaml

# Kubernetes secrets (if generated locally)
k8s/secrets/
helm/secrets/

# Database files (for local development)
*.db
*.sqlite
*.sqlite3

# Backup files
backup/
*.backup
*.bak

# Checkpoint files
*.checkpoint
*_checkpoint.json
checkpoints/

# Archive files
*.tar.gz
*.zip
*.rar
archives/

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Docker files
.dockerignore

# Kubernetes local config
kubeconfig*
*.kubeconfig

# Terraform files (if using IaC)
*.tfstate
*.tfstate.*
.terraform/
terraform.tfvars
*.tfplan

# Node modules (if any Node.js tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python virtual environments
.conda/
anaconda/
miniconda/

# Certificates and keys
*.pem
*.key
*.crt
*.p12
*.pfx
certs/
certificates/

# Local development overrides
docker-compose.override.yml
docker-compose.local.yml

# Monitoring data
prometheus_data/
grafana_data/
loki_data/

# Cache directories
.cache/
.pytest_cache/
.mypy_cache/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# JetBrains IDEs
.idea/
*.iml
*.ipr
*.iws

# Visual Studio Code
.vscode/
!.vscode/settings.json.example
!.vscode/launch.json.example

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Local configuration
local.yaml
local.json
.local/

# Performance profiling
*.prof
*.profile

# Memory dumps
*.dump
*.hprof